{"version":3,"sources":["GraphLib/Drawing.js","GraphLib/State.js","GraphLib/ActionControl.js","GraphLib/GraphComponents/CanvasItem.js","GraphLib/Palette.js","GraphLib/GraphComponents/Circle.js","GraphLib/GraphComponents/StraightLine.js","GraphLib/GraphComponents/Segment.js","GraphLib/GraphComponents/Ray.js","GraphLib/Graph.js","App.js","serviceWorker.js","index.js"],"names":["canvas","ctx","backgroundContext","background","HEIGHT","WIDTH","state","_circles","circles","this","_straightLines","straightLines","_segments","el","_rays","Line","typeLine","Scrol","scale","wx","wy","sx","sy","mouse","x","y","rx","ry","button","Drawing","params","STEP","getContext","width","offsetWidth","height","offsetHeight","zoomed","number","zoomedX","zoomedY","zoomedX_INV","zoomedY_INV","buildGrid","context","clearRect","i","j","fillStyle","fillRect","render","forEach","segments","rays","target","headlen","source","start","angle","Math","atan2","beginPath","moveTo","lineTo","cos","PI","sin","strokeStyle","stroke","renderGrig","move","event","finish","bounds","getBoundingClientRect","clientX","left","clientY","top","xx","yy","ctrlKey","metaKey","out","mousedown","e","shiftKey","type","mouseup","syncCallback","exportState","console","log","push","x1","y1","selected","id","label","_x","_y","_x1","_y1","trackWheel","deltaY","min","max","preventDefault","keyManager","altKey","key","deleted","onCreateCircle","find","hovered","CanvasItem","X","Y","X1","Y1","_width","v","_height","hoveredCircle","SelectedElement","dragged","moving","movingStart","hoveredCircle1","movingFinish","style","cursor","PaletteSettings","SelectedCircleColor","SelectedLineColor","CircleWidth","CircleHeight","CircleBackgroundColor","CircleOutlineColor","CircleFont","CircleFontSize","CircleFontColor","CircleFontAlign","StraightLineColor","StraightLineFont","StraightLineFontSize","StraightLineFontColor","StraightLineFontAlign","LineFont","LineFontSize","LineFontColor","LineFontAlign","PaintLineLabel","line","p","p1","p2","dx","dy","lineHeight","name","font","save","textAlign","translate","rotate","fillText","restore","Palette","circle","circleDraw","Path2D","arc","fill","text","words","split","countWords","length","n","testLine","measureText","PaintCircleLabel","color","outlinecircle","equation","lineEquation","to","maxX","vertical","k","c","from","Circle","x_dis","round","y_dis","edgesDelete","edges","ports","port","SourcePort","TargetPort","delete","mouseX","mouseY","findCircle","changeCoors","StraightLine","abs","points","findStraightLine","changeCoorsStart","changeCoorsFinish","Segment","findSegment","Ray","findRay","initState","Graph","currentItem","element","toCircle","reays","toRay","StraightLines","toStraightLine","toSegment","initGraph","first","map","dblclick","wheel","mousemove","mouseout","keydown","addEventListener","initListeners","callback","Elements","window","onresize","container","document","getElementById","GraphLib","props","counter","onStateChanged","bind","view","setState","splice","findIndex","refs","ref","tabIndex","position","outline","backgroundColor","className","checked","htmlFor","onClick","React","Component","Boolean","location","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.31dc685b.chunk.js","sourcesContent":["import {state} from \"./State\"\r\n\r\nexport var canvas\r\nexport var ctx\r\nexport let backgroundContext\r\nexport let background\r\nexport var HEIGHT\r\nexport var WIDTH \r\nexport let STEP = 100\r\n\r\nexport let Scrol = {\r\n    scale : 0.5,\r\n    wx    : 0,\r\n    wy    : 0,\r\n    sx    : 0,\r\n    sy    : 0,\r\n} \r\n\r\nexport var mouse = {\r\n    x: 0,\r\n    y: 0,\r\n    rx: 0,\r\n    ry: 0,\r\n    button: 0\r\n};\r\n\r\nexport class Drawing{\r\n    STEP = 100;\r\n    constructor(params){\r\n        background = params.background;\r\n        backgroundContext = background.getContext('2d')\r\n        background.width  = background.offsetWidth;\r\n        background.height = background.offsetHeight;\r\n        canvas = params.canvas;\r\n        canvas.width  = canvas.offsetWidth;\r\n        canvas.height = canvas.offsetHeight;\r\n        ctx = canvas.getContext('2d');\r\n        HEIGHT = canvas.height;\r\n        WIDTH = canvas.width;\r\n    }\r\n}\r\n\r\nexport function zoomed(number) {\r\n    return (number * Scrol.scale);\r\n}\r\nexport function zoomedX(number) {\r\n    return (number - Scrol.wx) * Scrol.scale + Scrol.sx;\r\n}\r\nexport function zoomedY(number) {\r\n    return ((number - Scrol.wy) * Scrol.scale + Scrol.sy);\r\n}\r\nexport function zoomedX_INV(number) {\r\n    return ((number - Scrol.sx) * (1 / Scrol.scale) + Scrol.wx);\r\n}\r\nexport function zoomedY_INV(number) {\r\n    return ((number - Scrol.sy) * (1 / Scrol.scale) + Scrol.wy);\r\n}\r\n\r\nexport function buildGrid(context){\r\n    context.clearRect(0,0, WIDTH, HEIGHT);\r\n    for(let i = -100; i < 100; i++){\r\n        for(let j = -100; j < 100; j++){\r\n            context.fillStyle = '#F0F0F0';   \r\n            context.fillRect( zoomedX( (i*STEP) + 2), zoomedY((j*STEP) + 2), zoomed(STEP - 4), zoomed(STEP - 4) )\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport function render() {\r\n    // if(event && event.ctrlKey){\r\n    //     debugger\r\n    // }\r\n    ctx.clearRect(0,0, WIDTH, HEIGHT);\r\n\r\n    state.circles.forEach( el=> {\r\n        el.render(ctx, mouse.x, mouse.y)\r\n    });\r\n    state.straightLines.forEach( el=> {\r\n        el.render(ctx, mouse.x, mouse.y);\r\n    });\r\n    state.segments.forEach( el=> {\r\n        el.render(ctx, mouse.x, mouse.y);\r\n    });\r\n    state.rays.forEach( el=> {\r\n        el.render(ctx, mouse.x, mouse.y);\r\n    });\r\n    if(mouse.button && state.Line){\r\n        let target = mouse;\r\n        var headlen = zoomed(15);\r\n        let source = state.Line.start\r\n        var angle = Math.atan2(target.y-source.y,target.x-source.x);\r\n        ctx.beginPath();\r\n        ctx.moveTo(source.x, source.y);\r\n        ctx.lineTo(target.x, target.y)\r\n        ctx.lineTo(target.x-headlen*Math.cos(angle-Math.PI/7),target.y-headlen*Math.sin(angle-Math.PI/7));\r\n        ctx.lineTo(target.x-headlen*Math.cos(angle-Math.PI/7),target.y-headlen*Math.sin(angle-Math.PI/7));\r\n        ctx.moveTo(target.x, target.y);\r\n        ctx.lineTo(target.x-headlen*Math.cos(angle+Math.PI/7),target.y-headlen*Math.sin(angle+Math.PI/7));\r\n        ctx.lineTo(target.x, target.y);\r\n        ctx.lineTo(target.x-headlen*Math.cos(angle-Math.PI/7),target.y-headlen*Math.sin(angle-Math.PI/7));\r\n        ctx.strokeStyle = 'black';\r\n        ctx.stroke();\r\n    }else if (!mouse.button && state.Line){\r\n        state.Line = null\r\n    }\r\n}","export let state = {\r\n    _circles: [],\r\n    set circles(circles){\r\n        this._circles = circles;\r\n    },\r\n    get circles(){\r\n        return this._circles;\r\n    },\r\n    _straightLines: [],\r\n    set straightLines(straightLines){\r\n        this._straightLines = straightLines;\r\n    },\r\n    get straightLines(){\r\n        return this._straightLines;\r\n    },\r\n    _segments:[],\r\n    set segments(el){\r\n        this._segments = el\r\n    },\r\n    get segments(){\r\n        return this._segments\r\n    },\r\n    _rays:[],\r\n    set rays(el){\r\n        this._rays = el\r\n    },\r\n    get rays(){\r\n        return this._rays\r\n    },\r\n\r\n\r\n    Line: null,\r\n    typeLine: '',\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import {state} from \"./State\"\r\nimport {zoomedX_INV, zoomedY_INV,zoomedX, zoomedY, mouse, canvas, render, Scrol, buildGrid, backgroundContext } from \"./Drawing.js\"\r\nlet renderGrig = null;\r\n\r\nfunction move(event) {\r\n\r\n    if(state.Line){\r\n        state.Line.finish = {\r\n            x:zoomedX(mouse.rx),\r\n            y:zoomedY(mouse.ry),\r\n        }\r\n    }\r\n\r\n    mouse.bounds = canvas.getBoundingClientRect();\r\n    mouse.x = event.clientX - mouse.bounds.left;\r\n    mouse.y = event.clientY - mouse.bounds.top;\r\n    var xx  = mouse.rx;\r\n    var yy  = mouse.ry;\r\n    mouse.rx = zoomedX_INV(mouse.x); \r\n    mouse.ry = zoomedY_INV(mouse.y);\r\n\r\n    if ( (mouse.button === 1 && event.ctrlKey) || event.metaKey) {\r\n        Scrol.wx -= mouse.rx - xx;\r\n        Scrol.wy -= mouse.ry - yy;\r\n        mouse.rx = zoomedX_INV(mouse.x);\r\n        mouse.ry = zoomedY_INV(mouse.y);\r\n        renderGrig = true\r\n        \r\n    }\r\n    render();\r\n}\r\n\r\nfunction out (){\r\n    mouse.button = 0\r\n    render();  \r\n}\r\n\r\nfunction mousedown(e){\r\n    if(e.shiftKey){\r\n        state.Line = {\r\n            type: state.typeLine,\r\n            start:{\r\n                x:zoomedX(mouse.rx),\r\n                y:zoomedY(mouse.ry),\r\n            }\r\n        }\r\n    }\r\n    mouse.button = 1;\r\n    render();  \r\n}\r\n\r\nfunction mouseup(e,syncCallback){\r\n    mouse.button = 0;\r\n    let exportState =[]\r\n    \r\n\r\n    if(state.Line){\r\n        let exportState = []\r\n        console.log(state.Line.type)\r\n        switch(state.Line.type){\r\n            case 'StraightLine':\r\n                exportState.push({\r\n                    type: 'StraightLine',\r\n                    x:zoomedX_INV(state.Line.start.x),\r\n                    y:zoomedX_INV(state.Line.start.y),\r\n                    x1:zoomedX_INV(state.Line.finish.x),\r\n                    y1:zoomedX_INV(state.Line.finish.y),\r\n                })\r\n                break;\r\n            case \"Segment\":\r\n                exportState.push({\r\n                    type: 'Segment',\r\n                    x:zoomedX_INV(state.Line.start.x),\r\n                    y:zoomedX_INV(state.Line.start.y),\r\n                    x1:zoomedX_INV(state.Line.finish.x),\r\n                    y1:zoomedX_INV(state.Line.finish.y),\r\n                })\r\n                break;\r\n            case 'Ray':\r\n                exportState.push({\r\n                    type: 'Ray',\r\n                    x:zoomedX_INV(state.Line.start.x),\r\n                    y:zoomedX_INV(state.Line.start.y),\r\n                    x1:zoomedX_INV(state.Line.finish.x),\r\n                    y1:zoomedX_INV(state.Line.finish.y),\r\n                })\r\n                break;\r\n        }\r\n        syncCallback({\r\n            event:'Create',\r\n            state: exportState,\r\n        })\r\n        return\r\n    }\r\n    render()\r\n\r\n    state.circles.forEach(el =>{\r\n        if(el.selected){\r\n            exportState.push({\r\n                type: 'Circle',\r\n                id: el.id,\r\n                label: el.label,\r\n                x:el._x,\r\n                y:el._y,\r\n                selected:el.selected,\r\n            })\r\n        }\r\n    })\r\n    state.straightLines.forEach(el =>{\r\n        if(el.selected){\r\n            exportState.push({\r\n                type: 'StraightLine',\r\n                label: el.label,\r\n                id: el.id,\r\n                x:el._x,\r\n                y:el._y,\r\n                x1: el._x1,\r\n                y1:el._y1,\r\n                selected:el.selected\r\n            })\r\n        }\r\n    })\r\n    state.segments.forEach(el =>{\r\n        if(el.selected){\r\n            exportState.push({\r\n                type: 'Segment',\r\n                label: el.label,\r\n                id: el.id,\r\n                x:el._x,\r\n                y:el._y,\r\n                x1: el._x1,\r\n                y1:el._y1,\r\n                selected:el.selected\r\n            })\r\n        }\r\n    })\r\n    state.rays.forEach(el =>{\r\n        if(el.selected){\r\n            exportState.push({\r\n                type: 'Ray',\r\n                label: el.label,\r\n                id: el.id,\r\n                x:el._x,\r\n                y:el._y,\r\n                x1: el._x1,\r\n                y1:el._y1,\r\n                selected:el.selected\r\n            })\r\n        }\r\n    })\r\n    if(renderGrig){\r\n        buildGrid(backgroundContext)\r\n        renderGrig = null;\r\n    }\r\n    syncCallback({\r\n        event:'Select',\r\n        state: exportState,\r\n    })\r\n}\r\n\r\n\r\nfunction trackWheel(e) {\r\n    if(e.ctrlKey || e.metaKey){\r\n        if (e.deltaY < 0) {\r\n            Scrol.scale = Math.min(5, Scrol.scale * 1.1);\r\n        } else {\r\n            Scrol.scale = Math.max(0.1, Scrol.scale * (1 / 1.1));\r\n        }\r\n        Scrol.wx = mouse.rx;\r\n        Scrol.wy = mouse.ry;\r\n        Scrol.sx = mouse.x;\r\n        Scrol.sy = mouse.y;\r\n        mouse.rx = zoomedX_INV(mouse.x);\r\n        mouse.ry = zoomedY_INV(mouse.y);\r\n        e.preventDefault();\r\n        render();\r\n        buildGrid(backgroundContext)\r\n    }\r\n}\r\n\r\nfunction keyManager(e, syncCallback){\r\n    if(e.altKey){\r\n        console.log(state)\r\n    }\r\n\r\n\r\n\r\n    if(e.key === 'Delete' || e.key === 'Backspace'){\r\n        let exportState =[]\r\n        state.circles.forEach(el =>{\r\n            if(el.selected){\r\n                exportState.push({\r\n                    type: 'Circle',\r\n                    id: el.id,\r\n                    label: el.label,\r\n                    x:el._x,\r\n                    y:el._y,\r\n                    selected:el.selected,\r\n                    deleted:true\r\n                })\r\n            }\r\n        })\r\n        state.straightLines.forEach(el =>{\r\n            if(el.selected){\r\n                exportState.push({\r\n                    type: 'StraightLine',\r\n                    label: el.label,\r\n                    id: el.id,\r\n                    x:el._x,\r\n                    y:el._y,\r\n                    x1: el._x1,\r\n                    y1:el._y1,\r\n                    selected:el.selected\r\n                })\r\n            }\r\n        })\r\n        state.segments.forEach(el =>{\r\n            if(el.selected){\r\n                exportState.push({\r\n                    type: 'Segment',\r\n                    label: el.label,\r\n                    id: el.id,\r\n                    x:el._x,\r\n                    y:el._y,\r\n                    x1: el._x1,\r\n                    y1:el._y1,\r\n                    selected:el.selected\r\n                })\r\n            }\r\n        })\r\n        state.rays.forEach(el =>{\r\n            if(el.selected){\r\n                exportState.push({\r\n                    type: 'Ray',\r\n                    label: el.label,\r\n                    id: el.id,\r\n                    x:el._x,\r\n                    y:el._y,\r\n                    x1: el._x1,\r\n                    y1:el._y1,\r\n                    selected:el.selected\r\n                })\r\n            }\r\n        })\r\n\r\n\r\n        syncCallback({\r\n            event:'Delete',\r\n            state: exportState,\r\n        })\r\n    }        \r\n}\r\n\r\n\r\n\r\nconst onCreateCircle = (e,syncCallback) => {\r\n    let circles = state.circles;\r\n    if(!circles.find(el => el.hovered ===true)){\r\n        syncCallback({\r\n            event: 'Create',\r\n            state: [\r\n                {\r\n                    type: 'Circle',\r\n                    x:mouse.rx,\r\n                    y:mouse.ry,\r\n                },\r\n            ]\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport function initListeners(canvas, mouse, syncCallback){\r\n    let map = {\r\n        dblclick: onCreateCircle,\r\n        wheel: trackWheel,\r\n        mousemove: move,\r\n        mousedown: mousedown,\r\n        mouseup: mouseup,\r\n        mouseout: out,\r\n        keydown: keyManager\r\n    };\r\n\r\n\r\n    for ( let event in map ){\r\n        canvas.addEventListener(event, e=> {\r\n            if(\r\n                event == 'dblclick'\r\n                || event == 'mouseup'\r\n                || event == 'keydown'\r\n            ){\r\n                map[event](e, syncCallback);\r\n            }else{\r\n                map[event](e)\r\n            };\r\n        });   \r\n    }\r\n} ","import {state} from \"../State\"\r\nimport {zoomed, zoomedX, zoomedX_INV, zoomedY, zoomedY_INV, mouse, canvas } from \"../Drawing.js\"\r\n\r\nexport default  class CanvasItem{\r\n    _width;\r\n    get width() { return zoomed(this._width) };\r\n    set width(v) { this._width = v; }\r\n\r\n    _height;\r\n    get height(){return zoomed(this._height) }\r\n    set height(v){ this._height = v; }\r\n\r\n    _x;\r\n    get x(){ return zoomedX(this._x) }\r\n    set x(v){ this._x = v; }\r\n\r\n    _y;\r\n    get y(){return zoomedY(this._y) }\r\n    set y(v){ this._y = v; }\r\n\r\n    \r\n    _x1;\r\n    get x1(){ return zoomedX(this._x1) }\r\n    set x1(v){ this._x1 = v; }\r\n\r\n    _y1;\r\n    get y1(){return zoomedY(this._y1) }\r\n    set y1(v){ this._y1 = v; }\r\n    \r\n    \r\n\r\n    constructor(width, X, Y, X1, Y1){\r\n        this.width = width;\r\n        this.x = zoomedX_INV(X);\r\n        this.y = zoomedY_INV(Y);\r\n        this.x1 = zoomedX_INV(X1);\r\n        this.y1 = zoomedY_INV(Y1);\r\n    }\r\n\r\n\r\n\r\n    findCircle(x,y){\r\n        if(this.hoveredCircle(x,y)){\r\n            if(mouse.button){\r\n                if(!state.SelectedElement && !state.Line){\r\n                    this.dragged = {\r\n                        x: x - this.x,\r\n                        y: y - this.y\r\n                    };\r\n                    this.moving=true\r\n                    state.SelectedElement = this;\r\n                };\r\n            }else{\r\n                if(this.dragged) this.selected = true;\r\n                this.dragged = null;\r\n                state.SelectedElement = null;\r\n                this.moving = false;\r\n            }\r\n        }else{\r\n            if(this.dragged){\r\n                this.selected = true;\r\n            }\r\n            if(mouse.button){\r\n                this.selected = null;\r\n                if(this === state.SelectedElement){\r\n                    state.SelectedElement = null;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    findStraightLine(x,y){\r\n        if(this.hoveredCircle(x,y)){\r\n            if(mouse.button){\r\n                if(this.dragged){\r\n                    this.movingStart = true\r\n                }\r\n                if(!state.SelectedElement && !state.Line){\r\n                    this.dragged = {\r\n                        x: x - this.x,\r\n                        y: y - this.y\r\n                    };\r\n                    state.SelectedElement = this;\r\n                };\r\n            }else{\r\n                if(this.dragged) this.selected = true;\r\n                this.dragged = null;\r\n                state.SelectedElement = null;\r\n                this.movingStart = false;\r\n            }\r\n        }else if (this.hoveredCircle1(x,y)){\r\n            if(mouse.button){\r\n                if(this.dragged){\r\n                    this.movingFinish = true\r\n                }\r\n                if(!state.SelectedElement && !state.Line){\r\n                    this.dragged = {\r\n                        x: x - this.x1,\r\n                        y: y - this.y1\r\n                    };\r\n                    state.SelectedElement = this;\r\n                };\r\n            }else{\r\n                if(this.dragged) this.selected = true;\r\n                this.dragged = null;\r\n                state.SelectedElement = null;\r\n                this.movingFinish = false;\r\n            }\r\n        }else{\r\n            if(this.dragged){\r\n                this.selected = true;\r\n            }\r\n            if(mouse.button){\r\n                this.selected = null;\r\n                if(this === state.SelectedElement){\r\n                    state.SelectedElement = null;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    findSegment(x,y){\r\n        if(this.hoveredCircle(x,y)){\r\n            if(mouse.button){\r\n                if(this.dragged){\r\n                    this.movingStart = true\r\n                }\r\n                if(!state.SelectedElement && !state.Line){\r\n                    this.dragged = {\r\n                        x: x - this.x,\r\n                        y: y - this.y\r\n                    };\r\n                    state.SelectedElement = this;\r\n                };\r\n            }else{\r\n                if(this.dragged) this.selected = true;\r\n                this.dragged = null;\r\n                state.SelectedElement = null;\r\n                this.movingStart = false;\r\n            }\r\n        }else if (this.hoveredCircle1(x,y)){\r\n            if(mouse.button){\r\n                if(this.dragged){\r\n                    this.movingFinish = true\r\n                }\r\n                if(!state.SelectedElement && !state.Line){\r\n                    this.dragged = {\r\n                        x: x - this.x1,\r\n                        y: y - this.y1\r\n                    };\r\n                    state.SelectedElement = this;\r\n                };\r\n            }else{\r\n                if(this.dragged) this.selected = true;\r\n                this.dragged = null;\r\n                state.SelectedElement = null;\r\n                this.movingFinish = false;\r\n            }\r\n        }else{\r\n            if(this.dragged){\r\n                this.selected = true;\r\n            }\r\n            if(mouse.button){\r\n                this.selected = null;\r\n                if(this === state.SelectedElement){\r\n                    state.SelectedElement = null;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    findRay(x,y){\r\n        if(this.hoveredCircle(x,y)){\r\n            if(mouse.button){\r\n                if(this.dragged){\r\n                    this.movingStart = true\r\n                }\r\n                if(!state.SelectedElement && !state.Line){\r\n                    this.dragged = {\r\n                        x: x - this.x,\r\n                        y: y - this.y\r\n                    };\r\n                    state.SelectedElement = this;\r\n                };\r\n            }else{\r\n                if(this.dragged) this.selected = true;\r\n                this.dragged = null;\r\n                state.SelectedElement = null;\r\n                this.movingStart = false;\r\n            }\r\n        }else if (this.hoveredCircle1(x,y)){\r\n            if(mouse.button){\r\n                if(this.dragged){\r\n                    this.movingFinish = true\r\n                }\r\n                if(!state.SelectedElement && !state.Line){\r\n                    this.dragged = {\r\n                        x: x - this.x1,\r\n                        y: y - this.y1\r\n                    };\r\n                    state.SelectedElement = this;\r\n                };\r\n            }else{\r\n                if(this.dragged) this.selected = true;\r\n                this.dragged = null;\r\n                state.SelectedElement = null;\r\n                this.movingFinish = false;\r\n            }\r\n        }else{\r\n            if(this.dragged){\r\n                this.selected = true;\r\n            }\r\n            if(mouse.button){\r\n                this.selected = null;\r\n                if(this === state.SelectedElement){\r\n                    state.SelectedElement = null;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    hoveredCircle(x,y){\r\n        if((x- this.x)**2 + (y-this.y)**2 <(this.width)**2){\r\n            this.hovered = true;\r\n            canvas.style.cursor = \"pointer\"\r\n        }else{\r\n            this.hovered = false;\r\n            canvas.style.cursor = \"default\"\r\n        }\r\n        return this.hovered\r\n    }\r\n    hoveredCircle1(x,y){\r\n        if((x- this.x1)**2 + (y-this.y1)**2 <(this.width)**2){\r\n            this.hovered = true;\r\n            canvas.style.cursor = \"pointer\"\r\n        }else{\r\n            this.hovered = false;\r\n            canvas.style.cursor = \"default\"\r\n        }\r\n        return this.hovered\r\n    }\r\n}\r\n\r\n","import {state} from \"./State\"\r\nimport {zoomed, ctx, WIDTH, HEIGHT} from \"./Drawing\"\r\n\r\n\r\n\r\nexport let PaletteSettings = {\r\n    SelectedCircleColor :'#99ccff',\r\n    SelectedLineColor : '#3399ff',\r\n\r\n    CircleWidth: 300,\r\n    CircleHeight: 300,\r\n\r\n    CircleBackgroundColor:'#eee',\r\n    CircleOutlineColor : '#999',\r\n\r\n    CircleFont : \"Arial\",\r\n    CircleFontSize: 25,\r\n    CircleFontColor: \"black\",\r\n    CircleFontAlign: \"center\",\r\n\r\n    StraightLineColor: 'black',\r\n    StraightLineFont : \"Arial\",\r\n    StraightLineFontSize: 25,\r\n    StraightLineFontColor: \"black\",\r\n    StraightLineFontAlign: \"center\",\r\n\r\n    LineFont : \"Arial\",\r\n    LineFontSize: 25,\r\n    LineFontColor: \"black\",\r\n    LineFontAlign: \"center\",\r\n}\r\n\r\nfunction PaintCircleLabel(el){\r\n    let lineHeight = zoomed(PaletteSettings[`${el.name}` + 'FontSize'] + 4)\r\n    let x = el.x;\r\n    let y = el.y;\r\n    let text   = el.label;\r\n    let width  = el.width;\r\n\r\n    ctx.font = lineHeight + \"px \" + PaletteSettings[`${el.name}` + 'Font'];\r\n    ctx.fillStyle = PaletteSettings[`${el.name}` + 'FontColor'];\r\n    ctx.textAlign = PaletteSettings[`${el.name}` + 'FontAlign'];\r\n\r\n    var words = text.split(\"-\");\r\n    var countWords = words.length;\r\n    var line = \"\";\r\n    for (var n = 0; n < countWords; n++) {\r\n        var testLine = line + words[n] + \" \";\r\n        var testWidth = ctx.measureText(testLine).width;\r\n        if (testWidth > width) {\r\n            ctx.fillText(line, x, y);\r\n            line = words[n] + \" \";\r\n            y += lineHeight;\r\n        }\r\n        else {\r\n            line = testLine;\r\n        }\r\n    }\r\n    ctx.fillText(line, x, y);\r\n}\r\n\r\nfunction PaintLineLabel(line){\r\n    let alignment = 'center';\r\n    let padding = 0;\r\n    let p1 = {x:line.x, y:line.y}\r\n    let p2 = {x: line.x1, y: line.y1}\r\n  \r\n    var dx = p2.x - p1.x;\r\n    var dy = p2.y - p1.y;  \r\n    var p, pad;\r\n\r\n\r\n    p = p1;\r\n    pad = 1/2;\r\n    let lineHeight = zoomed(PaletteSettings[`${line.name}` + 'FontSize'] + 4)\r\n    ctx.font = lineHeight + \"px \" + PaletteSettings[`${line.name}` + 'Font'];\r\n    ctx.fillStyle = 'black'\r\n    ctx.save();\r\n    ctx.textAlign = alignment;\r\n    ctx.translate(p.x+dx*pad,p.y+dy*pad);\r\n    ctx.rotate(Math.atan2(dy,dx));\r\n    ctx.fillText(line.label,0,0);\r\n    ctx.restore();\r\n}\r\n\r\n\r\n\r\nexport let Palette = {\r\n\r\n    PaintCircle(circle){\r\n        if(circle.selected){\r\n            ctx.fillStyle = PaletteSettings.SelectedCircleColor;\r\n            ctx.strokeStyle = PaletteSettings.SelectedCircleColor;\r\n        }else{\r\n            ctx.fillStyle = PaletteSettings.CircleBackgroundColor;\r\n            ctx.strokeStyle = PaletteSettings.CircleOutlineColor;\r\n        }\r\n        let circleDraw = new Path2D();\r\n        circleDraw.moveTo(circle.x, circle.y);\r\n\r\n        circleDraw.arc(circle.x, circle.y, circle.width/2, 0, 2 * Math.PI);\r\n        ctx.stroke(circleDraw)\r\n        ctx.fill(circleDraw)\r\n\r\n        \r\n        PaintCircleLabel(circle)\r\n    },\r\n\r\n    PaintSegment(line){\r\n        let color = (line.selected)? PaletteSettings.SelectedLineColor: PaletteSettings.StraightLineColor\r\n        ctx.save();\r\n        let outlinecircle = new Path2D();\r\n        if(line.hovered){\r\n            ctx.fillStyle = \"rgba(255,255,255,0.8)\"\r\n            outlinecircle.arc(line.x, line.y, line.width, 0, 2 * Math.PI);\r\n            outlinecircle.arc(line.x1, line.y1, line.width, 0, 2 * Math.PI);\r\n            ctx.fill(outlinecircle)\r\n        }\r\n        ctx.strokeStyle = color;\r\n        ctx.fillStyle = color;\r\n        ctx.beginPath();\r\n        ctx.moveTo(line.x, line.y);\r\n        ctx.lineTo(line.x1, line.y1);\r\n        ctx.stroke();\r\n        ctx.restore();\r\n      \r\n        ctx.save();\r\n        ctx.beginPath();\r\n        ctx.arc(line.x, line.y, 4, 0, 2 * Math.PI, false);\r\n        ctx.fill();\r\n        ctx.beginPath();\r\n        ctx.arc(line.x1, line.y1, 4, 0, 2 * Math.PI, false);\r\n        ctx.fill();\r\n        ctx.restore();\r\n        PaintLineLabel(line)\r\n    },\r\n\r\n    PaintRay(line){\r\n        let equation = line.lineEquation()\r\n        let color = (line.selected)? PaletteSettings.SelectedLineColor: PaletteSettings.StraightLineColor\r\n        let outlinecircle = new Path2D();\r\n        if(line.hovered){\r\n            ctx.fillStyle = \"rgba(255,255,255,0.8)\"\r\n            outlinecircle.arc(line.x, line.y, line.width, 0, 2 * Math.PI);\r\n            outlinecircle.arc(line.x1, line.y1, line.width, 0, 2 * Math.PI);\r\n            ctx.fill(outlinecircle)\r\n        }\r\n        const minX = 0;\r\n        const maxX = ctx.canvas.width;\r\n        let from, to;\r\n        if (!equation.vertical) {\r\n            const { k, c } = equation;\r\n            if(line.x >line.x1){\r\n                to = { x: minX, y: k * minX + c };\r\n            }else{\r\n                to = { x: maxX, y: k * maxX + c };\r\n            }\r\n            // from = { x: minX, y: k * minX + c };\r\n        }\r\n        if(equation.vertical){\r\n            from = { x: line.x, y: 0};\r\n            to = { x: line.x, y: ctx.canvas.height};\r\n        }\r\n\r\n\r\n        ctx.save();\r\n        ctx.strokeStyle = color;\r\n        ctx.fillStyle = color;\r\n        ctx.beginPath();\r\n        ctx.moveTo(line.x, line.y);\r\n        ctx.lineTo(to.x, to.y);\r\n        ctx.stroke();\r\n        ctx.restore();\r\n      \r\n        ctx.save();\r\n        ctx.beginPath();\r\n        ctx.fillStyle = color\r\n        ctx.arc(line.x, line.y, 4, 0, 2 * Math.PI, false);\r\n        ctx.fill();\r\n        ctx.beginPath();\r\n        ctx.arc(line.x1, line.y1, 4, 0, 2 * Math.PI, false);\r\n        ctx.fill();\r\n        ctx.restore();\r\n        PaintLineLabel(line)\r\n    },\r\n\r\n\r\n\r\n    PaintStraightLine(line){\r\n        let equation = line.lineEquation()\r\n        let color = (line.selected)? PaletteSettings.SelectedLineColor: PaletteSettings.StraightLineColor\r\n        let outlinecircle = new Path2D();\r\n        if(line.hovered){\r\n            ctx.fillStyle = \"rgba(255,255,255,0.8)\"\r\n            outlinecircle.arc(line.x, line.y, line.width, 0, 2 * Math.PI);\r\n            outlinecircle.arc(line.x1, line.y1, line.width, 0, 2 * Math.PI);\r\n            ctx.fill(outlinecircle)\r\n        }\r\n        const minX = 0;\r\n        const maxX = ctx.canvas.width;\r\n        let from, to;\r\n        if (!equation.vertical) {\r\n            const { k, c } = equation;\r\n          from = { x: minX, y: k * minX + c };\r\n          to = { x: maxX, y: k * maxX + c };\r\n        }\r\n        if(equation.vertical){\r\n            from = { x: line.x, y: 0};\r\n            to = { x: line.x, y: ctx.canvas.height};\r\n        }\r\n        ctx.save();\r\n        ctx.strokeStyle = color;\r\n        ctx.fillStyle = 'black';\r\n        ctx.beginPath();\r\n        ctx.moveTo(from.x, from.y);\r\n        ctx.lineTo(to.x, to.y);\r\n        ctx.stroke();\r\n        ctx.restore();\r\n      \r\n        ctx.save();\r\n        ctx.beginPath();\r\n        ctx.arc(line.x, line.y, 4, 0, 2 * Math.PI, false);\r\n        ctx.fill();\r\n        ctx.beginPath();\r\n        ctx.arc(line.x1, line.y1, 4, 0, 2 * Math.PI, false);\r\n        ctx.fill();\r\n        ctx.restore();\r\n        PaintLineLabel(line)\r\n    },\r\n}\r\n","import CanvasItem from \"./CanvasItem\"\r\nimport {state} from \"../State\"\r\nimport {zoomedX_INV, zoomedY_INV, STEP} from \"../Drawing.js\"\r\nimport {Palette, PaletteSettings} from \"../Palette\"\r\n\r\nexport default class Circle extends CanvasItem{  \r\n    name = 'Circle';                          \r\n    moving = false;\r\n    label;\r\n    constructor(X, Y, id , label, selected){\r\n        super(PaletteSettings.CircleWidth, X, Y,X,Y);\r\n        let x_dis = Math.round(zoomedX_INV(X));\r\n        let y_dis = Math.round(zoomedY_INV(Y));\r\n        this.x = Math.min(x_dis-x_dis%STEP,x_dis-x_dis%STEP + STEP)\r\n        this.y = Math.min(y_dis-y_dis%STEP,y_dis-y_dis%STEP + STEP);\r\n        this.id = id;\r\n        this.label = label\r\n        this.selected = selected;\r\n    }\r\n\r\n    changeCoors(x,y){ \r\n        this.x = zoomedX_INV(x - this.dragged.x)\r\n        this.y = zoomedY_INV(y - this.dragged.y);\r\n        //console.log(this.x + \":\"+ this.y)\r\n    }\r\n\r\n    delete(){\r\n        let edgesDelete = []\r\n        for(let edges of state.edges){\r\n            for(let port of this.ports){\r\n                if(port === edges.SourcePort || port === edges.TargetPort){\r\n                    edgesDelete.push(edges);\r\n                }\r\n            }\r\n        }\r\n        edgesDelete.forEach(el => {el.delete()})\r\n        this.deleted = true;\r\n    }\r\n\r\n    render(ctx, mouseX, mouseY){\r\n        Palette.PaintCircle(this)\r\n        this.findCircle(mouseX, mouseY);\r\n        if(this.moving){\r\n            this.changeCoors(mouseX, mouseY );\r\n        }\r\n    }\r\n}\r\n\r\n","import CanvasItem from \"./CanvasItem\"\r\nimport {state} from \"../State\"\r\nimport {zoomedX_INV, zoomedY_INV, WIDTH, HEIGHT} from \"../Drawing.js\"\r\nimport {Palette, PaletteSettings} from \"../Palette\"\r\n\r\nexport default class StraightLine extends CanvasItem{  \r\n    name = 'StraightLine';                          \r\n    movingStart = false;\r\n    movingFinish = false;\r\n    label;\r\n    constructor(X, Y, X1, Y1, id , label, selected){\r\n        super(40, X, Y,X1,Y1);\r\n        this.id = id;\r\n        this.label = label\r\n        this.selected = selected;\r\n    }\r\n\r\n    changeCoorsStart(x,y){ \r\n        this.x = zoomedX_INV(x - this.dragged.x)\r\n        this.y = zoomedY_INV(y - this.dragged.y);\r\n    }\r\n    changeCoorsFinish(x,y){ \r\n        this.x1 = zoomedX_INV(x - this.dragged.x)\r\n        this.y1 = zoomedY_INV(y - this.dragged.y);\r\n    }\r\n\r\n    lineEquation() {\r\n        let p1 = {x: this.x, y : this.y}\r\n        let p2 = {x: this.x1, y : this.y1}\r\n        const dx = p1.x - p2.x;\r\n        if (Math.abs(dx) < 1e-3) {\r\n                return  { x: p1.x, vertical: true, points: [p1, p2] };\r\n        }\r\n        const k = (p1.y - p2.y) / dx;\r\n        const c = p1.y - k * p1.x;\r\n        return  { k, c, vertical: false, points: [p1, p2] };\r\n    }\r\n\r\n\r\n    render(ctx, mouseX, mouseY){\r\n        Palette.PaintStraightLine(this)\r\n        this.findStraightLine(mouseX, mouseY);\r\n        if(this.movingStart){\r\n            this.changeCoorsStart(mouseX, mouseY );\r\n        }\r\n        if(this.movingFinish){\r\n            this.changeCoorsFinish(mouseX, mouseY );\r\n        }\r\n    }\r\n\r\n    \r\n}\r\n\r\n","import CanvasItem from \"./CanvasItem\"\r\nimport {state} from \"../State\"\r\nimport {zoomedX_INV, zoomedY_INV, WIDTH, HEIGHT} from \"../Drawing.js\"\r\nimport {Palette, PaletteSettings} from \"../Palette\"\r\n\r\nexport default class Segment extends CanvasItem{  \r\n    name = 'Segment';                          \r\n    movingStart = false;\r\n    movingFinish = false;\r\n    label;\r\n    constructor(X, Y, X1, Y1, id , label, selected){\r\n        super(40, X, Y,X1,Y1);\r\n        this.id = id;\r\n        this.label = label\r\n        this.selected = selected;\r\n        this.lineEquation()\r\n    }\r\n\r\n    changeCoorsStart(x,y){ \r\n        this.x = zoomedX_INV(x - this.dragged.x)\r\n        this.y = zoomedY_INV(y - this.dragged.y);\r\n        //console.log(this.x + \":\"+ this.y)\r\n    }\r\n    changeCoorsFinish(x,y){ \r\n        this.x1 = zoomedX_INV(x - this.dragged.x)\r\n        this.y1 = zoomedY_INV(y - this.dragged.y);\r\n        //console.log(this.x + \":\"+ this.y)\r\n    }\r\n\r\n    lineEquation() {\r\n        let p1 = {x: this.x, y : this.y}\r\n        let p2 = {x: this.x1, y : this.y1}\r\n        const dx = p1.x - p2.x;\r\n        if (Math.abs(dx) < 1e-3) {\r\n                return { x: p1.x, vertical: true, points: [p1, p2] };\r\n        }\r\n        const k = (p1.y - p2.y) / dx;\r\n        const c = p1.y - k * p1.x;\r\n        return { k, c, vertical: false, points: [p1, p2] };\r\n    }\r\n\r\n\r\n    render(ctx, mouseX, mouseY, event){\r\n        Palette.PaintSegment(this)\r\n        this.findSegment(mouseX, mouseY);\r\n        if(this.movingStart){\r\n            this.changeCoorsStart(mouseX, mouseY );\r\n        }\r\n        if(this.movingFinish){\r\n            this.changeCoorsFinish(mouseX, mouseY );\r\n        }\r\n    }\r\n\r\n    \r\n}\r\n\r\n","import CanvasItem from \"./CanvasItem\"\r\nimport {state} from \"../State\"\r\nimport {zoomedX_INV, zoomedY_INV} from \"../Drawing.js\"\r\nimport {Palette} from \"../Palette\"\r\n\r\nexport default class Ray extends CanvasItem{  \r\n    name = 'Ray';                          \r\n    movingStart = false;\r\n    movingFinish = false;\r\n    label;\r\n    constructor(X, Y, X1, Y1, id , label, selected){\r\n        super(40, X, Y,X1,Y1);\r\n        this.id = id;\r\n        this.label = label\r\n        this.selected = selected;\r\n    }\r\n\r\n    changeCoorsStart(x,y){ \r\n        this.x = zoomedX_INV(x - this.dragged.x)\r\n        this.y = zoomedY_INV(y - this.dragged.y);\r\n    }\r\n    changeCoorsFinish(x,y){ \r\n        this.x1 = zoomedX_INV(x - this.dragged.x)\r\n        this.y1 = zoomedY_INV(y - this.dragged.y);\r\n    }\r\n\r\n    lineEquation() {\r\n        let p1 = {x: this.x, y : this.y}\r\n        let p2 = {x: this.x1, y : this.y1}\r\n        const dx = p1.x - p2.x;\r\n        if (Math.abs(dx) < 1e-3) {\r\n                return { x: p1.x, vertical: true, points: [p1, p2] };\r\n        }\r\n        const k = (p1.y - p2.y) / dx;\r\n        const c = p1.y - k * p1.x;\r\n        return { k, c, vertical: false, points: [p1, p2] };\r\n    }\r\n\r\n\r\n    render(ctx, mouseX, mouseY, event){\r\n        Palette.PaintRay(this)\r\n        this.findRay(mouseX, mouseY);\r\n        if(this.movingStart){\r\n            this.changeCoorsStart(mouseX, mouseY );\r\n        }\r\n        if(this.movingFinish){\r\n            this.changeCoorsFinish(mouseX, mouseY );\r\n        }\r\n    }\r\n\r\n    \r\n}\r\n\r\n","\r\nimport {zoomedX, zoomedY, Drawing, mouse, render, zoomedX_INV, zoomedY_INV, buildGrid} from \"./Drawing\"\r\nimport {initListeners} from  \"./ActionControl\"\r\nimport {state} from \"./State\"\r\nimport Circle from \"./GraphComponents/Circle\"\r\nimport StraightLines from \"./GraphComponents/StraightLine\"\r\nimport Segment from \"./GraphComponents/Segment\"\r\nimport Ray from \"./GraphComponents/Ray\"\r\n\r\n\r\n\r\n\r\nconst toCircle = (element) => {\r\n    let circles = state.circles;\r\n    if(!element.deleted){\r\n        circles.push(new Circle(zoomedX(element.x), zoomedY(element.y),element.id,element.label, element.selected))\r\n        state.circles = circles\r\n    }\r\n\r\n}\r\nconst toStraightLine = (element) => {\r\n    let straightLines = state.straightLines;\r\n    // console.log(\"Пришли:[{\" +element.x+', '+element.y + \"},{\" + element.x1 + ', ' + element.y1+\"}]\")\r\n    // console.log(\"Записали:[{\" +zoomedX(element.x)+', '+zoomedY(element.y) + \"},{\" + zoomedX(element.x) + ', ' + zoomedY(element.y)+\"}]\")\r\n    if(!element.deleted){\r\n        straightLines.push(new StraightLines(zoomedX(element.x), zoomedY(element.y),zoomedX(element.x1), zoomedY(element.y1),element.id,element.label, element.selected))\r\n        state.straightLines = straightLines\r\n    }\r\n}\r\n\r\nconst toSegment = (element) => {\r\n    let segments = state.segments;\r\n    if(!element.deleted){\r\n        segments.push(new Segment(zoomedX(element.x), zoomedY(element.y),zoomedX(element.x1), zoomedY(element.y1),element.id,element.label, element.selected))\r\n        state.segments = segments\r\n    }\r\n}\r\n\r\nconst toRay = (element) => {\r\n    let reays = state.rays;\r\n    if(!element.deleted){\r\n        reays.push(new Ray(zoomedX(element.x), zoomedY(element.y),zoomedX(element.x1), zoomedY(element.y1),element.id,element.label, element.selected))\r\n        state.reays = reays\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nfunction initState(Graph){\r\n    console.log(Graph)\r\n    Graph.forEach(currentItem => {\r\n        switch (currentItem.type) {\r\n            case 'Circle':\r\n                toCircle(currentItem)\r\n                break;\r\n            case 'Ray':\r\n                toRay(currentItem)\r\n                break;\r\n            case 'StraightLine':\r\n                toStraightLine(currentItem)\r\n                break;\r\n            case 'Segment':\r\n                toSegment(currentItem)\r\n                break;\r\n        }\r\n    });\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const initGraph = (params) =>{\r\n    state.circles = [];\r\n    state.straightLines = [];\r\n    state.segments = [];\r\n    state.rays = [];\r\n    let background = params.background\r\n    let canvas = params.element;\r\n    new Drawing({canvas: canvas, background: background});\r\n    if(params.first)initListeners(canvas, mouse, params.callback);\r\n    initState(params.state.Elements)\r\n    //state.tools = tools;\r\n    window.onresize = () => {\r\n        let container = document.getElementById('three')\r\n        canvas.width = container.offsetWidth ;\r\n        canvas.height = container.offsetHeight ;\r\n        background.width = container.offsetWidth ;\r\n        background.height = container.offsetHeight ;\r\n        initGraph(params)\r\n    }\r\n    buildGrid(params.background.getContext('2d'))\r\n    state.syncCallback = params.callback\r\n    if(params.state.Ray){\r\n        state.typeLine = 'Ray'\r\n    }else if(params.state.Segment){\r\n        state.typeLine = 'Segment'\r\n    }else if(params.state.StraightLine){\r\n        state.typeLine = 'StraightLine'\r\n    }\r\n    render();\r\n}","import React from 'react';\nimport './App.css';\nimport {initGraph} from \"./GraphLib/Graph\"\n\n\n\n\n\nclass GraphLib extends React.Component{\n  constructor(props){\n    super(props)\n    this.state = {\n      Elements:[],\n      counter:0,\n      StraightLine:null,\n      Segment:null,\n      Ray:null,\n    }\n    this.onStateChanged = this.onStateChanged.bind(this)\n  }\n\n\n  onStateChanged(params){\n    //console.log(params)\n    switch (params.event) {\n        case 'Select':\n            if(params.state[0]) {\n                let view = params.state[0];\n                let Elements\n                switch (view.type) {\n                    case 'Circle':\n                          Elements= this.state.Elements.map(el => {\n                          if(el.id === view.id){\n                            el = view;\n                          }else{\n                            el.selected=false;\n                          }\n                          return el\n                        })\n                        this.setState({Elements });\n                        break;\n                    default :\n                          Elements = this.state.Elements.map(el => {\n                          if(el.id === view.id){\n                            el = view;\n                          }else{\n                            el.selected=false;\n                          }\n                            return el\n                          })\n                          this.setState({Elements });\n                        \n                }\n            }\n            break;\n        case 'Create':\n            if(params.state[0]) {\n                let view = params.state[0];\n                let Elements = this.state.Elements.map(el => {el.selected = false; return el});\n                switch (view.type) {\n                    case 'Circle':\n                        view.id = this.state.counter;\n                        view.label = \"Круг №\"+ view.id;\n                        view.selected = true;\n                        Elements.push(view)\n                        break;\n                    case 'StraightLine':\n                        view.id = this.state.counter;\n                        view.label = \"Прямая №\"+ view.id;\n                        view.selected = true;\n                        Elements.push(view)\n                        break;\n                    case 'Segment':\n                        view.id = this.state.counter;\n                        view.label = \"Отрезок №\"+ view.id;\n                        view.selected = true;\n                        Elements.push(view)\n                        break;\n                    case 'Ray':\n                        view.id = this.state.counter;\n                        view.label = \"Луч №\"+ view.id;\n                        view.selected = true;\n                        Elements.push(view)\n                        break;\n                }\n                this.setState({Elements, counter:this.state.counter+1});\n            }\n            break;\n        case 'Delete':\n            if(params.state[0]){\n              let Elements = this.state.Elements\n              Elements.splice(this.state.Elements.findIndex(el => el.id == params.state[0].id),1)\n              this.setState({Elements})\n            }\n            break;\n    }\n  }\n\n\n  componentDidMount(){\n\n    initGraph(\n      {\n        state: {...this.state},\n        callback: this.onStateChanged,\n        element: this.refs.canvas,\n        background: this.refs.background,\n        first: true\n      }\n    );\n  }\n\n  componentDidUpdate(){\n\n    initGraph(\n      {\n        state: {...this.state},\n        callback: this.onStateChanged,\n        element: this.refs.canvas,\n        background: this.refs.background,\n      }\n    );\n  }\n\n\n\n  render() {\n    return (\n        <div id = 'three' style = {{width : '100%', height: '100%'}}>\n          <canvas id =\"background\" ref=\"background\" tabIndex= '1' style={{position:'absolute', outline: 'none'}}/>\n          <canvas id=\"canvas\"  ref=\"canvas\" tabIndex= '2' style={{position:'relative',backgroundColor: 'transparent', outline: 'none'}} />\n          <div className=\"controlPanel\">\n              <div className=\"Label\">\n                  <label>Прямая</label>\n                  <input type=\"checkbox\" className=\"checkbox\" id=\"checkbox\" checked = {this.state.StraightLine}/>\n                  <label htmlFor=\"checkbox\" onClick = {() => {this.setState({StraightLine:!this.state.StraightLine, Segment:false, Ray:false})}}/>\n              </div>\n              <div className=\"Label\">\n                  <label>Отрезок</label>\n                  <div>\n                    <input type=\"checkbox\" className=\"checkbox\" id=\"checkbox\" checked = {this.state.Segment}/>\n                    <label htmlFor=\"checkbox\" onClick = {() => {this.setState({StraightLine:false, Segment:!this.state.Segment, Ray:false})}}/>\n                  </div>\n              </div>\n              <div className=\"Label\">\n                  <label>Луч</label>\n                  <div>\n                    <input type=\"checkbox\" className=\"checkbox\" id=\"checkbox\" checked = {this.state.Ray}/>\n                    <label htmlFor=\"checkbox\" onClick = {() => {this.setState({StraightLine:false, Segment:false, Ray:!this.state.Ray})}}/>\n                  </div>\n              </div>\n          </div>\n        </div>\n      )\n  }\n\n}\n\n\nexport default GraphLib;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}